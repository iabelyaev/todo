import{createTaskData}from"./data.js";import{getCount}from"./counter.js";import saveLocal from"./local.js";import{initFilters}from"./filter.js";import{renderTask}from"./task.js";const input=document.querySelector(".todo__new"),buttonClearCompleted=document.querySelector(".filters__button"),buttonArrow=document.querySelector(".todo__button");let todos=JSON.parse(localStorage.getItem("todos"))||[];const showToggleAll=()=>{const t=todos.every((t=>t.completed));todos.length>=1?document.querySelector(".todo__button--control").style.display="flex":document.querySelector(".todo__button--control").style.display="none",buttonArrow.checked=t},onChangeCompletedTask=t=>{const e=t.target.closest(".todo__item"),o=+e.dataset.id,s=todos.find((t=>t.id===o));s.completed=!s.completed,e.classList.toggle("todo__item--completed"),globasUpdateTasks(),initFilters()},onClickRemoveTask=t=>{const e=t.target.closest(".todo__item"),o=+e.dataset.id;todos=todos.filter((t=>t.id!==o)),e.remove(),globasUpdateTasks()},clearCompleted=()=>{buttonClearCompleted.addEventListener("click",(()=>{todos.forEach((t=>{t.completed&&(todos=todos.filter((t=>!t.completed)),saveLocal(todos),renderTask(todos))})),showToggleAll()}))};function onButtonClickArrow(){buttonArrow.addEventListener("change",(()=>{todos.forEach((t=>{const e=document.querySelectorAll(`.todo__item[data-id="${t.id}"]`);buttonArrow.checked?(t.completed=!0,e.forEach((t=>{t.classList.add("todo__item--completed"),t.querySelector(".todo__item-input").checked=!0}))):(t.completed=!1,e.forEach((t=>{t.classList.remove("todo__item--completed"),t.querySelector(".todo__item-input").checked=!1})))})),globasUpdateTasks(),initFilters()}))}const editOfTask=t=>{const e=t.target.closest(".todo__item"),o=+e.dataset.id,s=e.querySelector(".todo__text"),d=todos.find((t=>t.id===o));e.classList.contains("todo__item--completed")||(e.classList.add("edit"),s.setAttribute("contenteditable",!0),s.focus(),s.addEventListener("keydown",(t=>{(""===s.innerHTML&&"Enter"===t.key||""===s.innerHTML&&"Escape"===t.key)&&(todos=todos.filter((t=>t.id!==o)),e.remove()),"Enter"===t.key&&(d.title=s.textContent,s.removeAttribute("contenteditable"),e.classList.remove("edit")),"Escape"===t.key&&(s.textContent=d.title,s.removeAttribute("contenteditable"),e.classList.remove("edit")),saveLocal(todos),getCount(todos)})),document.addEventListener("click",(t=>{t.target.closest(".todo-app")||(s.getAttribute("contenteditable")&&(d.title=s.textContent,s.removeAttribute("contenteditable"),e.classList.remove("edit")),saveLocal(todos),getCount(todos))})))},addTask=()=>{const t=createTaskData();renderTask(t),todos.push(t),globasUpdateTasks(),initFilters(),input.value=""},init=()=>{input.addEventListener("keydown",(t=>{""!==input.value.trim()&&"Enter"===t.key&&addTask()})),document.addEventListener("click",(t=>{""===input.value.trim()||t.target.closest(".todo-app")||addTask()})),buttonClearCompleted.addEventListener("click",(()=>{todos.forEach((t=>{t.completed&&(todos=todos.filter((t=>!t.completed)),saveLocal(todos),renderTask(todos))})),showToggleAll()})),initFilters(),onButtonClickArrow(),showToggleAll()};function globasUpdateTasks(){getCount(todos),saveLocal(todos),showToggleAll()}export{init,todos,onClickRemoveTask,onChangeCompletedTask,editOfTask};